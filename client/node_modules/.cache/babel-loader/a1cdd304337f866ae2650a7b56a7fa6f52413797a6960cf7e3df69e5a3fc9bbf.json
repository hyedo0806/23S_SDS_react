{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:4000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [remoteStream, setRemoteStream] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [msg, setMsg] = useState({\n    author: '',\n    message: ''\n  });\n  let myPeerConnection;\n  let roomName;\n  let myStream;\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const myPeerConnectionRef = useRef();\n  async function joinRoom(username, roomID) {\n    roomName = roomID;\n    if (username !== \"\" && roomID !== \"\") {\n      setMsg({\n        author: username,\n        message: \"입장을 환영합니다\"\n      });\n      socket.emit(\"join_room\", username, roomID);\n    }\n    getMedia();\n    myPeerConnection = new RTCPeerConnection();\n    console.log(\"socket.js \", myPeerConnection);\n  }\n  async function getMedia(deviceId) {\n    const initialConstrains = {\n      audio: true,\n      video: {\n        facingMode: \"user\"\n      }\n    };\n    const cameraConstraints = {\n      audio: true,\n      video: {\n        deviceId: {\n          exact: deviceId\n        }\n      }\n    };\n    myStream = await navigator.mediaDevices.getUserMedia(deviceId ? cameraConstraints : initialConstrains);\n    setLocalStream(myStream);\n    myVideo.current.srcObject = myStream;\n  }\n  ;\n\n  // useEffect(() => {\n\n  //   myPeerConnection.onicecandidate = event => {\n  //     if (event.candidate) {\n  //       socket.emit('icecandidate', {\n  //         candidate: event.candidate,\n  //         roomName\n  //       });\n  //     }\n  //   };\n\n  //   myPeerConnection.ontrack = event => {\n  //     setRemoteStream(event.streams[0]);\n  //     userVideo.current.srcObject = event.streams[0];\n  //   };\n\n  //   myStream.getTracks().forEach((track) => myPeerConnection.addTrack(track, myStream));\n\n  // }, []);\n\n  const send_message = (username, room, currMsg) => {\n    if (currMsg !== \"\") {\n      setMsg({\n        author: username,\n        message: currMsg\n      });\n      const msgData = {\n        room: room,\n        author: username,\n        message: currMsg,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours()\n      };\n      socket.emit(\"send_message\", msgData);\n    }\n  };\n  socket.on(\"receive_message\", data => {\n    setMsg({\n      author: data.author,\n      message: data.message\n    });\n  });\n  socket.on(\"welcome\", async () => {\n    const offer = await myPeerConnection.createOffer();\n    myPeerConnection.setLocalDescription(offer);\n    socket.emit(\"offer\", offer, roomName);\n  });\n  socket.on(\"offer\", async offer => {\n    console.log(\"socek.js offer : \", offer);\n    myPeerConnection.setRemoteDescription(offer);\n    const answer = await myPeerConnection.createAnswer();\n    myPeerConnection.setLocalDescription(answer);\n    socket.emit(\"answer\", answer, roomName);\n  });\n  socket.on(\"answer\", answer => {\n    console.log(\"received the answer\");\n    myPeerConnection.setRemoteDescription(answer);\n  });\n  socket.on(\"ice\", ice => {\n    console.log(\"received candidate\");\n    myPeerConnection.addIceCandidate(ice);\n  });\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      myVideo,\n      userVideo,\n      msg,\n      joinRoom,\n      send_message\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 7\n  }, this);\n};\n_s(ContextProvider, \"dQ4LlOc4gr+OBG1V6dNYV0dJ7pg=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","remoteStream","setRemoteStream","localStream","setLocalStream","msg","setMsg","author","message","myPeerConnection","roomName","myStream","myVideo","userVideo","myPeerConnectionRef","joinRoom","username","roomID","emit","getMedia","RTCPeerConnection","console","log","deviceId","initialConstrains","audio","video","facingMode","cameraConstraints","exact","navigator","mediaDevices","getUserMedia","current","srcObject","send_message","room","currMsg","msgData","time","Date","now","getHours","on","data","offer","createOffer","setLocalDescription","setRemoteDescription","answer","createAnswer","ice","addIceCandidate","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport {io} from 'socket.io-client';\n\n\nconst SocketContext = createContext();\n\nconst socket = io('http://localhost:4000');\n\nconst ContextProvider = ({ children }) => {\n\n    const [remoteStream, setRemoteStream] = useState(null);\n    const [localStream, setLocalStream] = useState(null);\n\n    const [msg, setMsg] = useState({ \n      author : '',\n      message : ''\n    })\n\n    let myPeerConnection;\n    let roomName;\n    let myStream;\n    const myVideo = useRef();\n    const userVideo = useRef();\n    const myPeerConnectionRef = useRef();\n    \n    async function joinRoom(username, roomID){\n      roomName = roomID;\n      if (username !== \"\" && roomID !== \"\"){\n        setMsg({\n          author : username,\n          message : \"입장을 환영합니다\"\n        })\n        socket.emit(\"join_room\", username, roomID);\n      } \n      getMedia();\n      myPeerConnection = new RTCPeerConnection(); \n      console.log(\"socket.js \", myPeerConnection);\n   \n    }\n\n  \n    async function getMedia(deviceId) {\n      const initialConstrains = {\n        audio: true,\n        video: { facingMode: \"user\" },\n      };\n      const cameraConstraints = {\n        audio: true,\n        video: { deviceId: { exact: deviceId } },\n      };\n  \n      myStream = await navigator.mediaDevices.getUserMedia(\n        deviceId ? cameraConstraints : initialConstrains\n      );\n      \n      setLocalStream(myStream);\n      myVideo.current.srcObject = myStream;\n      \n    };\n\n    // useEffect(() => {\n    \n    //   myPeerConnection.onicecandidate = event => {\n    //     if (event.candidate) {\n    //       socket.emit('icecandidate', {\n    //         candidate: event.candidate,\n    //         roomName\n    //       });\n    //     }\n    //   };\n        \n    //   myPeerConnection.ontrack = event => {\n    //     setRemoteStream(event.streams[0]);\n    //     userVideo.current.srcObject = event.streams[0];\n    //   };\n      \n    //   myStream.getTracks().forEach((track) => myPeerConnection.addTrack(track, myStream));\n\n    // }, []);\n\n      \n\n  \n    \n  \n    const send_message = (username, room, currMsg) => {\n      if (currMsg !== \"\") {\n          setMsg({\n            author : username,\n            message : currMsg\n          })\n          const msgData = {\n              room: room, \n              author: username,\n              message: currMsg,\n              time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours(),\n          };\n\n          socket.emit(\"send_message\", msgData);\n          \n      }\n    };\n\n    socket.on(\"receive_message\", (data) => {\n      setMsg({\n        author : data.author,\n        message : data.message\n      })\n        \n    })\n    \n\n    socket.on(\"welcome\", async () => {\n      \n      const offer = await myPeerConnection.createOffer();\n\n      myPeerConnection.setLocalDescription(offer);\n      socket.emit(\"offer\", offer, roomName);\n      \n    });\n\n    socket.on(\"offer\", async(offer) => {\n      console.log(\"socek.js offer : \", offer);\n      \n      myPeerConnection.setRemoteDescription(offer);\n      const answer = await myPeerConnection.createAnswer();\n      myPeerConnection.setLocalDescription(answer);\n      socket.emit(\"answer\", answer, roomName);\n    })\n\n    socket.on(\"answer\",(answer) => {\n      console.log(\"received the answer\");\n      myPeerConnection.setRemoteDescription(answer);\n    });\n\n    socket.on(\"ice\", (ice) => {\n      console.log(\"received candidate\");\n      myPeerConnection.addIceCandidate(ice);\n    });\n\n    \n\n    \n    \n    \n    \n    return (\n      <SocketContext.Provider value={{\n\n    \n        myVideo,\n        userVideo,\n       \n        msg,\n        joinRoom,\n        send_message, \n        \n      }}\n      >\n        \n        {children}\n      </SocketContext.Provider>\n    );\n};\n  \n\n\nexport { ContextProvider, SocketContext };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}