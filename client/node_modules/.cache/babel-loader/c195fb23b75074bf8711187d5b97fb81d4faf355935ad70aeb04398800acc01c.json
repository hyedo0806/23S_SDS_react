{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:4000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => {\n      setMe(id);\n      console.log(\"socket communication!\");\n    });\n    socket.on('callUser', _ref2 => {\n      let {\n        from,\n        name: callerName,\n        signal\n      } = _ref2;\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n  const joinRoom = (username, roomID) => {\n    if (username !== \"\" && roomID !== \"\") {\n      socket.emit(\"join_room\", roomID);\n    }\n  };\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall,\n      joinRoom\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n};\n_s(ContextProvider, \"WCD8xviLUIbJyClSRV/B7JoiY/M=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","console","log","_ref2","from","callerName","signal","isReceivingCall","joinRoom","username","roomID","emit","answerCall","peer","initiator","trickle","data","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport {io} from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\nconst socket = io('http://localhost:4000');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n  \n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n  \n    useEffect(() => {\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n        .then((currentStream) => {\n          setStream(currentStream);\n  \n          myVideo.current.srcObject = currentStream;\n        });\n  \n      socket.on('me', (id) => {\n        setMe(id)\n        console.log(\"socket communication!\");\n      });\n  \n      socket.on('callUser', ({ from, name: callerName, signal }) => {\n        setCall({ isReceivingCall: true, from, name: callerName, signal });\n      });\n    }, []);\n\n    const joinRoom = (username, roomID) =>{\n      if (username !== \"\" && roomID !== \"\"){\n        socket.emit(\"join_room\", roomID);\n      } \n    }\n  \n    const answerCall = () => {\n      setCallAccepted(true);\n  \n      const peer = new Peer({ initiator: false, trickle: false, stream });\n  \n      peer.on('signal', (data) => {\n        socket.emit('answerCall', { signal: data, to: call.from });\n      });\n  \n      peer.on('stream', (currentStream) => {\n        userVideo.current.srcObject = currentStream;\n      });\n  \n      peer.signal(call.signal);\n  \n      connectionRef.current = peer;\n    };\n  \n    const callUser = (id) => {\n      const peer = new Peer({ initiator: true, trickle: false, stream });\n  \n      peer.on('signal', (data) => {\n        socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n      });\n  \n      peer.on('stream', (currentStream) => {\n        userVideo.current.srcObject = currentStream;\n      });\n  \n      socket.on('callAccepted', (signal) => {\n        setCallAccepted(true);\n  \n        peer.signal(signal);\n      });\n  \n      connectionRef.current = peer;\n    };\n  \n    const leaveCall = () => {\n      setCallEnded(true);\n  \n      connectionRef.current.destroy();\n  \n      window.location.reload();\n    };\n  \n    return (\n      <SocketContext.Provider value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        callUser,\n        leaveCall,\n        answerCall,\n        joinRoom\n      }}\n      >\n        {children}\n      </SocketContext.Provider>\n    );\n};\n  \n\n\nexport { ContextProvider, SocketContext };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}