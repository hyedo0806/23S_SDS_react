{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport { TextField } from '@material-ui/core';\nimport React, { createContext, useEffect, useState, useContext } from 'react';\nimport { SocketContext } from \"../SocketContext\";\nimport DiaryItem from \"./msgRender\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\nconst msgList = [{\n  id: 1,\n  author: \"이정환\",\n  content: \"하이1\",\n  emotion: 5,\n  created_date: new Date().getTime()\n}, {\n  id: 2,\n  author: \"이정환\",\n  content: \"하이2\",\n  emotion: 5,\n  created_date: new Date().getTime()\n}, {\n  id: 3,\n  author: \"이정환\",\n  content: \"하이3\",\n  emotion: 5,\n  created_date: new Date().getTime()\n}];\nconst Chat = _ref => {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const {\n    name,\n    callAccepted,\n    myVideo,\n    userVideo,\n    callEnded,\n    stream,\n    call,\n    joinRoom,\n    send_message,\n    msg\n  } = useContext(SocketContext);\n  const [currMsg, setcurrMsg] = useState(\"\");\n  const msgHandler = () => {\n    send_message(username, room, currMsg);\n    setcurrMsg(\"\");\n  };\n  useEffect(() => {\n    if (msg.author != username) {\n      console.log(\"chat.js username : \", username);\n    }\n  }, [msg]);\n  console.log(\"Chat.js : \", msg);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      currMsg\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Live Chat \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msgList.map(it => /*#__PURE__*/_jsxDEV(DiaryItem, {\n          ...it\n        }, `diaryitem_${it.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [`${msg.author}`, \" : \", `${msg.message}`, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"input the message...\",\n          value: currMsg,\n          onChange: e => setcurrMsg(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: msgHandler,\n          children: \" send \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"LhyqUW1nXftQ/gHAJXR7LgNoCAU=\");\n_c = Chat;\nexport { Chat, ChatContext };\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["TextField","React","createContext","useEffect","useState","useContext","SocketContext","DiaryItem","jsxDEV","_jsxDEV","ChatContext","msgList","id","author","content","emotion","created_date","Date","getTime","Chat","_ref","_s","socket","username","room","name","callAccepted","myVideo","userVideo","callEnded","stream","call","joinRoom","send_message","msg","currMsg","setcurrMsg","msgHandler","console","log","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","it","message","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/components/Chat.js"],"sourcesContent":["import { TextField } from '@material-ui/core';\nimport React, {createContext, useEffect, useState, useContext} from 'react'\nimport { SocketContext } from \"../SocketContext\";\n\nimport DiaryItem from \"./msgRender\";\n\nconst ChatContext = createContext();\nconst msgList = [\n  {\n    id: 1,\n    author: \"이정환\",\n    content: \"하이1\",\n    emotion: 5,\n    created_date: new Date().getTime()\n  },\n  {\n    id: 2,\n    author: \"이정환\",\n    content: \"하이2\",\n    emotion: 5,\n    created_date: new Date().getTime()\n  },\n  {\n    id: 3,\n    author: \"이정환\",\n    content: \"하이3\",\n    emotion: 5,\n    created_date: new Date().getTime()\n  }\n];\n\nconst Chat = ({socket, username, room}) => {\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call, joinRoom, send_message, msg } = useContext(SocketContext);\n  \n  const [currMsg, setcurrMsg] = useState(\"\");\n  \n  const msgHandler = () => {\n    send_message(username, room, currMsg);\n    setcurrMsg(\"\");\n  };\n\n  useEffect(() => {\n    if(msg.author != username) {\n      console.log(\"chat.js username : \", username);\n    }\n  },[msg]);\n  \n\n  console.log(\"Chat.js : \", msg);\n \n  return (\n    <ChatContext.Provider value={{currMsg}}> \n        <div>\n            <div className=\"chat-header\">\n                <p> Live Chat </p>\n            </div>\n\n            <div>\n              {msgList.map((it) => (\n               \n                <DiaryItem key={`diaryitem_${it.id}`} {...it} />\n              ))}\n            </div>\n\n            <p>{`${msg.author}`} : {`${msg.message}`} </p>\n\n            <div className='chat-input'>\n                <input type=\"text\" placeholder='input the message...' value={currMsg} onChange={(e) => setcurrMsg(e.target.value)}/>\n                <button onClick={msgHandler} > send </button>\n            </div>\n            \n        </div>\n\n    </ChatContext.Provider>\n        \n  );\n}\n\nexport { Chat, ChatContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}