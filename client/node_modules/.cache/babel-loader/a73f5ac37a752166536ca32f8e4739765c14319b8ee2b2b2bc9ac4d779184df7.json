{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:4000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [msg, setMsg] = useState({\n    author: '',\n    message: ''\n  });\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  let myPeerConnection;\n  let roomName;\n  const send_message = (username, room, currMsg) => {\n    if (currMsg !== \"\") {\n      setMsg({\n        author: username,\n        message: currMsg\n      });\n      const msgData = {\n        room: room,\n        author: username,\n        message: currMsg,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours()\n      };\n      socket.emit(\"send_message\", msgData);\n    }\n  };\n  socket.on(\"welcome\", async () => {\n    const offer = await myPeerConnection.createOffer();\n    myPeerConnection.setLocalDescription(offer);\n    console.log(\"sent the offer\");\n    socket.emit(\"offer\", offer);\n  });\n  function makeConnection() {\n    myPeerConnection = new RTCPeerConnection();\n    myStream.getTracks().forEach(track => myPeerConnection.addTrack(track, myStream));\n  }\n  const joinRoom = (username, roomID) => {\n    roomName = roomID;\n    if (username !== \"\" && roomID !== \"\") {\n      setMsg({\n        author: username,\n        message: \"입장을 환영합니다\"\n      });\n      socket.emit(\"join_room\", username, roomID);\n    }\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMsg({\n        author: data.author,\n        message: data.message\n      });\n    });\n  }, [socket]);\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      msg,\n      callUser,\n      leaveCall,\n      answerCall,\n      joinRoom,\n      send_message\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 7\n  }, this);\n};\n_s(ContextProvider, \"iaDHp8z3Qi2VoiNVuPgfN5LmWvA=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","useParams","useSearchParams","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","msg","setMsg","author","message","myVideo","userVideo","connectionRef","myPeerConnection","roomName","send_message","username","room","currMsg","msgData","time","Date","now","getHours","emit","on","offer","createOffer","setLocalDescription","console","log","makeConnection","RTCPeerConnection","myStream","getTracks","forEach","track","addTrack","joinRoom","roomID","data","answerCall","peer","initiator","trickle","signal","to","from","currentStream","current","srcObject","callUser","id","userToCall","signalData","leaveCall","destroy","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport {io} from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\nconst socket = io('http://localhost:4000');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n\n    const [msg, setMsg] = useState({ \n      author : '',\n      message : ''\n    })\n\n    \n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n    let myPeerConnection;\n    let roomName;\n\n    const send_message = (username, room, currMsg) => {\n      if (currMsg !== \"\") {\n          setMsg({\n            author : username,\n            message : currMsg\n          })\n          const msgData = {\n              room: room, \n              author: username,\n              message: currMsg,\n              time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours(),\n          };\n\n          socket.emit(\"send_message\", msgData);\n          \n      }\n    };\n\n    socket.on(\"welcome\", async () => {\n      const offer = await myPeerConnection.createOffer();\n      myPeerConnection.setLocalDescription(offer);\n      console.log(\"sent the offer\");\n      socket.emit(\"offer\", offer, );\n    });\n\n    function makeConnection() {\n      myPeerConnection = new RTCPeerConnection();\n      myStream\n        .getTracks()\n        .forEach((track) => myPeerConnection.addTrack(track, myStream));\n    }\n\n    const joinRoom = (username, roomID) =>{\n      roomName = roomID\n      if (username !== \"\" && roomID !== \"\"){\n        setMsg({\n          author : username,\n          message : \"입장을 환영합니다\"\n        })\n        socket.emit(\"join_room\", username, roomID);\n      } \n      \n    }\n\n    useEffect(() => {\n      socket.on(\"receive_message\", (data) => {\n        setMsg({\n          author : data.author,\n          message : data.message\n        })\n          \n      })\n    },[socket]);\n    \n\n    \n\n    const answerCall = () => {\n      setCallAccepted(true);\n  \n      const peer = new Peer({ initiator: false, trickle: false, stream });\n  \n      peer.on('signal', (data) => {\n        socket.emit('answerCall', { signal: data, to: call.from });\n      });\n  \n      peer.on('stream', (currentStream) => {\n        userVideo.current.srcObject = currentStream;\n      });\n  \n      peer.signal(call.signal);\n  \n      connectionRef.current = peer;\n    };\n  \n    const callUser = (id) => {\n      const peer = new Peer({ initiator: true, trickle: false, stream });\n  \n      peer.on('signal', (data) => {\n        socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n      });\n  \n      peer.on('stream', (currentStream) => {\n        userVideo.current.srcObject = currentStream;\n      });\n  \n      socket.on('callAccepted', (signal) => {\n        setCallAccepted(true);\n  \n        peer.signal(signal);\n      });\n  \n      connectionRef.current = peer;\n    };\n  \n    const leaveCall = () => {\n      setCallEnded(true);\n  \n      connectionRef.current.destroy();\n  \n      window.location.reload();\n    };\n  \n    return (\n      <SocketContext.Provider value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        msg,\n        callUser,\n        leaveCall,\n        answerCall,\n        joinRoom,\n        send_message\n      }}\n      >\n        {children}\n      </SocketContext.Provider>\n    );\n};\n  \n\n\nexport { ContextProvider, SocketContext };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}