{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:4000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [msg, setMsg] = useState({\n    author: '',\n    message: ''\n  });\n  const myVideo = useRef(null);\n  const userVideo = useRef();\n  let myPeerConnection;\n  function handleCameraClick(cameraBtn) {\n    myVideo.current.srcObject.getVideoTracks()[0].enabled = !cameraBtn;\n  }\n  function handleMuteClick(muteBtn) {\n    myVideo.current.srcObject.getAudioTracks()[0].enabled = muteBtn;\n  }\n  useEffect(() => {\n    async function getMedia(deviceId) {\n      const initialConstrains = {\n        audio: true,\n        video: {\n          facingMode: \"user\"\n        }\n      };\n      const cameraConstraints = {\n        audio: true,\n        video: {\n          deviceId: {\n            exact: deviceId\n          }\n        }\n      };\n      try {\n        const myStream = await navigator.mediaDevices.getUserMedia(deviceId ? cameraConstraints : initialConstrains);\n        myVideo.current.srcObject = myStream;\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    getMedia();\n  }, []);\n  const send_message = (username, room, currMsg) => {\n    if (currMsg !== \"\") {\n      setMsg({\n        author: username,\n        message: currMsg\n      });\n      const msgData = {\n        room: room,\n        author: username,\n        message: currMsg,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours()\n      };\n      socket.emit(\"send_message\", msgData);\n    }\n  };\n  socket.on(\"welcome\", async () => {\n    const offer = await myPeerConnection.createOffer();\n    myPeerConnection.setLocalDescription(offer);\n    console.log(\"sent the offer\");\n    socket.emit(\"offer\", offer);\n  });\n  const joinRoom = (username, roomID) => {\n    if (username !== \"\" && roomID !== \"\") {\n      setMsg({\n        author: username,\n        message: \"입장을 환영합니다\"\n      });\n      socket.emit(\"join_room\", username, roomID);\n    }\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMsg({\n        author: data.author,\n        message: data.message\n      });\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      msg,\n      joinRoom,\n      send_message,\n      handleCameraClick,\n      handleMuteClick\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: myVideo,\n      autoPlay: true,\n      muted: true,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 10\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }, this);\n};\n_s(ContextProvider, \"L2iycUvZ3KCXQZEnxxfZ84CIuMw=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","useParams","useSearchParams","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","msg","setMsg","author","message","myVideo","userVideo","myPeerConnection","handleCameraClick","cameraBtn","current","srcObject","getVideoTracks","enabled","handleMuteClick","muteBtn","getAudioTracks","getMedia","deviceId","initialConstrains","audio","video","facingMode","cameraConstraints","exact","myStream","navigator","mediaDevices","getUserMedia","e","console","log","send_message","username","room","currMsg","msgData","time","Date","now","getHours","emit","on","offer","createOffer","setLocalDescription","joinRoom","roomID","data","Provider","value","ref","autoPlay","muted","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport {io} from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\nconst socket = io('http://localhost:4000');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n\n    const [msg, setMsg] = useState({ \n      author : '',\n      message : ''\n    })\n\n    const myVideo = useRef(null);\n    const userVideo = useRef();\n    \n    let myPeerConnection;\n\n    function handleCameraClick (cameraBtn) {\n      \n      myVideo.current.srcObject.getVideoTracks()[0].enabled = !cameraBtn;\n    }\n  \n    function handleMuteClick (muteBtn) {\n\n      myVideo.current.srcObject.getAudioTracks()[0].enabled = muteBtn;\n    }\n\n    useEffect(() => {\n      async function getMedia(deviceId) {\n        const initialConstrains = {\n          audio: true,\n          video: { facingMode: \"user\" },\n        };\n        const cameraConstraints = {\n          audio: true,\n          video: { deviceId: { exact: deviceId } },\n        };\n        try {\n        \n          const myStream = await navigator.mediaDevices.getUserMedia(\n            deviceId ? cameraConstraints : initialConstrains\n          );\n          myVideo.current.srcObject = myStream;\n          \n        } catch (e) {\n          console.log(e);\n        }\n      }\n    getMedia();\n    }, []);\n\n\n    const send_message = (username, room, currMsg) => {\n      if (currMsg !== \"\") {\n          setMsg({\n            author : username,\n            message : currMsg\n          })\n          const msgData = {\n              room: room, \n              author: username,\n              message: currMsg,\n              time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours(),\n          };\n\n          socket.emit(\"send_message\", msgData);\n          \n      }\n    };\n\n    socket.on(\"welcome\", async () => {\n      const offer = await myPeerConnection.createOffer();\n      myPeerConnection.setLocalDescription(offer);\n      console.log(\"sent the offer\");\n      socket.emit(\"offer\", offer, );\n    });\n\n    const joinRoom = (username, roomID) =>{\n      \n      if (username !== \"\" && roomID !== \"\"){\n        setMsg({\n          author : username,\n          message : \"입장을 환영합니다\"\n        })\n        socket.emit(\"join_room\", username, roomID);\n      } \n      \n    }\n\n    useEffect(() => {\n      socket.on(\"receive_message\", (data) => {\n        setMsg({\n          author : data.author,\n          message : data.message\n        })\n          \n      })\n    },[socket]);\n    \n    return (\n      <SocketContext.Provider value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        msg,\n        joinRoom,\n        send_message,\n        handleCameraClick,\n        handleMuteClick\n      }}\n      >\n         <video ref={myVideo} autoPlay muted style={{ display: 'none' }} />\n        {children}\n      </SocketContext.Provider>\n    );\n};\n  \n\n\nexport { ContextProvider, SocketContext };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}