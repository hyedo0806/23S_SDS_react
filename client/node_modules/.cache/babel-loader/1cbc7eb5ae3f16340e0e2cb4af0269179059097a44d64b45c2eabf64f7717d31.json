{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:4000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [remoteStream, setRemoteStream] = useState(null);\n  const [msg, setMsg] = useState({\n    author: '',\n    message: ''\n  });\n  const myVideo = useRef();\n  const userVideo = useRef();\n  let myStream;\n  let roomName;\n  let myPeerConnection;\n  async function getMedia(deviceId) {\n    const initialConstrains = {\n      audio: true,\n      video: {\n        facingMode: \"user\"\n      }\n    };\n    const cameraConstraints = {\n      audio: true,\n      video: {\n        deviceId: {\n          exact: deviceId\n        }\n      }\n    };\n    try {\n      myStream = await navigator.mediaDevices.getUserMedia(deviceId ? cameraConstraints : initialConstrains);\n      myVideo.current.srcObject = myStream;\n    } catch (e) {}\n    makeConnection();\n  }\n  function makeConnection() {\n    myPeerConnection = new RTCPeerConnection();\n    myPeerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit('ice', event.candidate, roomName);\n      }\n    };\n    myPeerConnection.ontrack = event => {\n      setRemoteStream(event.streams[0]);\n      remoteVideoRef.current.srcObject = event.streams[0];\n    };\n    myStream.getTracks().forEach(track => myPeerConnection.addTrack(track, myStream));\n  }\n  const send_message = (username, room, currMsg) => {\n    if (currMsg !== \"\") {\n      setMsg({\n        author: username,\n        message: currMsg\n      });\n      const msgData = {\n        room: room,\n        author: username,\n        message: currMsg,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours()\n      };\n      socket.emit(\"send_message\", msgData);\n    }\n  };\n  socket.on(\"welcome\", async () => {\n    const offer = await myPeerConnection.createOffer();\n    myPeerConnection.setLocalDescription(offer);\n    socket.emit(\"offer\", offer, roomName);\n  });\n  socket.on(\"offer\", async offer => {\n    console.log(\"socek.js offer : \", offer);\n    myPeerConnection.setRemoteDescription(offer);\n    const answer = await myPeerConnection.createAnswer();\n    myPeerConnection.setLocalDescription(answer);\n    socket.emit(\"answer\", answer, roomName);\n  });\n  socket.on(\"answer\", answer => {\n    console.log(\"received the answer\");\n    myPeerConnection.setRemoteDescription(answer);\n  });\n  socket.on(\"ice\", ice => {\n    console.log(\"received candidate\");\n    myPeerConnection.addIceCandidate(ice);\n  });\n  async function joinRoom(username, roomID) {\n    roomName = roomID;\n    if (username !== \"\" && roomID !== \"\") {\n      setMsg({\n        author: username,\n        message: \"입장을 환영합니다\"\n      });\n      socket.emit(\"join_room\", username, roomID);\n    }\n    getMedia();\n  }\n  socket.on(\"receive_message\", data => {\n    setMsg({\n      author: data.author,\n      message: data.message\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      callEnded,\n      me,\n      msg,\n      setName,\n      joinRoom,\n      send_message\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 7\n  }, this);\n};\n_s(ContextProvider, \"03EWImWj3Oj4OThMz/inqX4A00A=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","remoteStream","setRemoteStream","msg","setMsg","author","message","myVideo","userVideo","myStream","roomName","myPeerConnection","getMedia","deviceId","initialConstrains","audio","video","facingMode","cameraConstraints","exact","navigator","mediaDevices","getUserMedia","current","srcObject","e","makeConnection","RTCPeerConnection","onicecandidate","event","candidate","emit","ontrack","streams","remoteVideoRef","getTracks","forEach","track","addTrack","send_message","username","room","currMsg","msgData","time","Date","now","getHours","on","offer","createOffer","setLocalDescription","console","log","setRemoteDescription","answer","createAnswer","ice","addIceCandidate","joinRoom","roomID","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport {io} from 'socket.io-client';\n\n\nconst SocketContext = createContext();\n\nconst socket = io('http://localhost:4000');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n    const [remoteStream, setRemoteStream] = useState(null);\n    \n    const [msg, setMsg] = useState({ \n      author : '',\n      message : ''\n    })\n\n\n    \n\n\n    const myVideo = useRef();\n    const userVideo = useRef();\n    \n    let myStream;\n    let roomName;\n    let myPeerConnection;\n\n  \n\n    async function getMedia(deviceId) {\n      const initialConstrains = {\n        audio: true,\n        video: { facingMode: \"user\" },\n      };\n      const cameraConstraints = {\n        audio: true,\n        video: { deviceId: { exact: deviceId } },\n      };\n      try {\n      \n        myStream = await navigator.mediaDevices.getUserMedia(\n          deviceId ? cameraConstraints : initialConstrains\n        );\n        \n        myVideo.current.srcObject = myStream;\n       \n        \n      } catch (e) {\n       \n      }\n      makeConnection();\n    }\n\n    function makeConnection() {\n      myPeerConnection = new RTCPeerConnection();\n      myPeerConnection.onicecandidate = event => {\n        if(event.candidate) {\n          socket.emit('ice', event.candidate, roomName)\n        }\n      };\n      myPeerConnection.ontrack = event => {\n        setRemoteStream(event.streams[0]);\n        remoteVideoRef.current.srcObject = event.streams[0];\n      };\n    \n      myStream.getTracks().forEach((track) => myPeerConnection.addTrack(track, myStream));\n    }\n\n\n    \n  \n    const send_message = (username, room, currMsg) => {\n      if (currMsg !== \"\") {\n          setMsg({\n            author : username,\n            message : currMsg\n          })\n          const msgData = {\n              room: room, \n              author: username,\n              message: currMsg,\n              time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours(),\n          };\n\n          socket.emit(\"send_message\", msgData);\n          \n      }\n    };\n\n    socket.on(\"welcome\", async () => {\n      const offer = await myPeerConnection.createOffer();\n      myPeerConnection.setLocalDescription(offer);\n     \n      socket.emit(\"offer\", offer, roomName);\n    });\n\n    socket.on(\"offer\", async(offer) => {\n      console.log(\"socek.js offer : \", offer);\n      myPeerConnection.setRemoteDescription(offer);\n      const answer = await myPeerConnection.createAnswer();\n      myPeerConnection.setLocalDescription(answer);\n      socket.emit(\"answer\", answer, roomName);\n    })\n\n    socket.on(\"answer\",(answer) => {\n      console.log(\"received the answer\");\n      myPeerConnection.setRemoteDescription(answer);\n    });\n\n    socket.on(\"ice\", (ice) => {\n      console.log(\"received candidate\");\n      myPeerConnection.addIceCandidate(ice);\n    });\n\n    async function joinRoom(username, roomID){\n      roomName = roomID;\n      if (username !== \"\" && roomID !== \"\"){\n        setMsg({\n          author : username,\n          message : \"입장을 환영합니다\"\n        })\n        socket.emit(\"join_room\", username, roomID);\n      } \n          getMedia();\n    }\n\n    \n    \n    socket.on(\"receive_message\", (data) => {\n      setMsg({\n        author : data.author,\n        message : data.message\n      })\n        \n    })\n    \n    \n    return (\n      <SocketContext.Provider value={{\n\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        callEnded,\n        me,\n        msg,\n        setName,\n        joinRoom,\n        send_message, \n        \n      }}\n      >\n        \n        {children}\n      </SocketContext.Provider>\n    );\n};\n  \n\n\nexport { ContextProvider, SocketContext };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}