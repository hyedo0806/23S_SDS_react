{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:4000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [msg, setMsg] = useState({});\n\n  // const msg = {\n  //   author:\"1\", \n  //   message:\"2\"\n  // };\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  const send_message = (username, room, currMsg) => {\n    if (currMsg !== \"\") {\n      setMsg({\n        author: username,\n        message: currMsg\n      });\n      const msgData = {\n        room: room,\n        author: username,\n        message: currMsg,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours()\n      };\n      socket.emit(\"send_message\", msgData);\n    }\n  };\n  const joinRoom = (username, roomID) => {\n    if (username !== \"\" && roomID !== \"\") {\n      socket.emit(\"join_room\", username, roomID);\n    }\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMsg({\n        author: data.author,\n        message: data.message\n      });\n    });\n  }, [socket]);\n  const new_message = (msg, room) => {\n    socket.emit(\"new_message\", msg);\n  };\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      msg,\n      callUser,\n      leaveCall,\n      answerCall,\n      joinRoom,\n      send_message\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 7\n  }, this);\n};\n_s(ContextProvider, \"vfOihDT1/4XewYlL1vT6YVAliXA=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","useParams","useSearchParams","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","msg","setMsg","myVideo","userVideo","connectionRef","send_message","username","room","currMsg","author","message","msgData","time","Date","now","getHours","emit","joinRoom","roomID","on","data","new_message","answerCall","peer","initiator","trickle","signal","to","from","currentStream","current","srcObject","callUser","id","userToCall","signalData","leaveCall","destroy","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport { useParams, useSearchParams } from \"react-router-dom\";\nimport {io} from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\nconst socket = io('http://localhost:4000');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n    const [msg, setMsg] = useState({ \n\n    })\n\n    // const msg = {\n    //   author:\"1\", \n    //   message:\"2\"\n    // };\n  \n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n\n    const send_message = (username, room, currMsg) => {\n      if (currMsg !== \"\") {\n          setMsg({\n            author : username,\n            message : currMsg\n          })\n          const msgData = {\n              room: room, \n              author: username,\n              message: currMsg,\n              time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours(),\n          };\n\n          socket.emit(\"send_message\", msgData);\n          \n      }\n    };\n\n    const joinRoom = (username, roomID) =>{\n      \n      if (username !== \"\" && roomID !== \"\"){\n        socket.emit(\"join_room\", username, roomID);\n      } \n      \n    }\n\n    useEffect(() => {\n      socket.on(\"receive_message\", (data) => {\n        setMsg({\n          author : data.author,\n          message : data.message\n        })\n          \n      })\n      \n      \n    },[socket]);\n    \n\n    \n\n    const new_message = (msg, room) => {\n      \n      socket.emit(\"new_message\", msg);\n    }\n  \n    const answerCall = () => {\n      setCallAccepted(true);\n  \n      const peer = new Peer({ initiator: false, trickle: false, stream });\n  \n      peer.on('signal', (data) => {\n        socket.emit('answerCall', { signal: data, to: call.from });\n      });\n  \n      peer.on('stream', (currentStream) => {\n        userVideo.current.srcObject = currentStream;\n      });\n  \n      peer.signal(call.signal);\n  \n      connectionRef.current = peer;\n    };\n  \n    const callUser = (id) => {\n      const peer = new Peer({ initiator: true, trickle: false, stream });\n  \n      peer.on('signal', (data) => {\n        socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n      });\n  \n      peer.on('stream', (currentStream) => {\n        userVideo.current.srcObject = currentStream;\n      });\n  \n      socket.on('callAccepted', (signal) => {\n        setCallAccepted(true);\n  \n        peer.signal(signal);\n      });\n  \n      connectionRef.current = peer;\n    };\n  \n    const leaveCall = () => {\n      setCallEnded(true);\n  \n      connectionRef.current.destroy();\n  \n      window.location.reload();\n    };\n  \n    return (\n      <SocketContext.Provider value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        msg,\n        callUser,\n        leaveCall,\n        answerCall,\n        joinRoom,\n        send_message\n      }}\n      >\n        {children}\n      </SocketContext.Provider>\n    );\n};\n  \n\n\nexport { ContextProvider, SocketContext };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}