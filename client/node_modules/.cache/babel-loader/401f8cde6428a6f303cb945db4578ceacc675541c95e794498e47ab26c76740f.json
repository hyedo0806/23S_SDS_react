{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/components/Video.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState, useContext, useRef } from 'react';\nimport { SocketContext } from \"../SocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContext = /*#__PURE__*/createContext();\nconst Video = _ref => {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const {\n    name,\n    callAccepted,\n    myVideo,\n    userVideo,\n    callEnded,\n    call,\n    joinRoom,\n    send_message,\n    answerCall\n  } = useContext(SocketContext);\n  const [stream, setStream] = useState();\n  const [msgList, setmsgList] = useState([]);\n  const [currMsg, setcurrMsg] = useState(\"\");\n  let muted = false;\n  let cameraOff = false;\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: false\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n  }, []);\n  function handleCameraClick() {\n    console.log(\"camera_clicked\");\n    if (!cameraOff) {\n      cameraOff = true;\n    } else {\n      cameraOff = false;\n    }\n  }\n  function handleMuteClick() {\n    console.log(\"mute_clicked\");\n    if (!muted) {\n      muted = true;\n    } else {\n      muted = false;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(VideoContext.Provider, {\n    value: {\n      currMsg\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Live Chat \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMuteClick,\n        children: \" mute \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCameraClick,\n        children: \" camera \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        playsInline: true,\n        muted: true,\n        ref: myVideo,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        playsInline: true,\n        muted: true,\n        ref: userVideo,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Video, \"yf8nnHnpglXoB9UBYJm0QphPZGM=\");\n_c = Video;\nexport { Video, VideoContext };\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["React","createContext","useEffect","useState","useContext","useRef","SocketContext","jsxDEV","_jsxDEV","VideoContext","Video","_ref","_s","socket","username","room","name","callAccepted","myVideo","userVideo","callEnded","call","joinRoom","send_message","answerCall","stream","setStream","msgList","setmsgList","currMsg","setcurrMsg","muted","cameraOff","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","handleCameraClick","console","log","handleMuteClick","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","playsInline","ref","autoPlay","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/components/Video.js"],"sourcesContent":["import React, {createContext, useEffect, useState, useContext, useRef} from 'react'\nimport { SocketContext } from \"../SocketContext\";\n\nconst VideoContext = createContext();\n\nconst Video = ({socket, username, room}) => {\n  const { name, callAccepted, myVideo, userVideo, callEnded, call, joinRoom, send_message, answerCall } = useContext(SocketContext);\n  const [stream, setStream] = useState();\n  const [msgList, setmsgList] = useState([]);\n  const [currMsg, setcurrMsg] = useState(\"\");\n  \n  let muted = false;\n  let cameraOff = false;\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: false })\n      .then((currentStream) => {\n        setStream(currentStream);\n        myVideo.current.srcObject = currentStream;\n      });\n\n  }, []);\n\n  function handleCameraClick () {\n    console.log(\"camera_clicked\");\n    if(!cameraOff) {\n      cameraOff = true;\n    } else {\n      cameraOff = false;\n    }\n  }\n\n  function handleMuteClick () {\n    console.log(\"mute_clicked\");\n    if(!muted) {\n      muted = true;\n    } else {\n      muted = false;\n    }\n  }\n\n  return (\n    <VideoContext.Provider value={{currMsg}}> \n        <div>\n            <div className=\"chat-header\">\n                <p> Live Chat </p>\n            </div>\n            <button onClick={handleMuteClick}> mute </button>\n            <button onClick={handleCameraClick}> camera </button>\n            <video playsInline muted ref={myVideo} autoPlay />\n            <video playsInline muted ref={userVideo} autoPlay />\n            \n        </div>\n\n    </VideoContext.Provider>\n        \n  );\n}\n\nexport { Video, VideoContext };\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}