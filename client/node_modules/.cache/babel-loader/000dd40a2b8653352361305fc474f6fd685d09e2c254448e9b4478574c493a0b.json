{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:4000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [msg, setMsg] = useState({\n    author: '',\n    message: ''\n  });\n  const myVideo = useRef();\n  const userVideo = useRef();\n  let myStream;\n  let roomName;\n  let myPeerConnection;\n  async function getCameras() {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const cameras = devices.filter(device => device.kind === \"videoinput\");\n      const currentCamera = myStream.getVideoTracks()[0];\n      cameras.forEach(camera => {\n        const option = document.createElement(\"option\");\n        option.value = camera.deviceId;\n        option.innerText = camera.label;\n        if (currentCamera.label === camera.label) {\n          option.selected = true;\n        }\n        camerasSelect.appendChild(option);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async function getMedia(deviceId) {\n    const initialConstrains = {\n      audio: true,\n      video: {\n        facingMode: \"user\"\n      }\n    };\n    const cameraConstraints = {\n      audio: true,\n      video: {\n        deviceId: {\n          exact: deviceId\n        }\n      }\n    };\n    try {\n      myStream = await navigator.mediaDevices.getUserMedia(deviceId ? cameraConstraints : initialConstrains);\n      myVideo.current.srcObject = myStream;\n      if (!deviceId) {\n        await getCameras();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  function makeConnection() {\n    myPeerConnection = new RTCPeerConnection();\n    myStream.getTracks().forEach(track => myPeerConnection.addTrack(track, myStream));\n  }\n  getMedia();\n  makeConnection();\n  const send_message = (username, room, currMsg) => {\n    if (currMsg !== \"\") {\n      setMsg({\n        author: username,\n        message: currMsg\n      });\n      const msgData = {\n        room: room,\n        author: username,\n        message: currMsg,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours()\n      };\n      socket.emit(\"send_message\", msgData);\n    }\n  };\n  socket.on(\"welcome\", async () => {\n    const offer = await myPeerConnection.createOffer();\n    myPeerConnection.setLocalDescription(offer);\n    console.log(\"sent the offer\");\n    socket.emit(\"offer\", offer, roomName);\n  });\n  const joinRoom = (username, roomID) => {\n    roomName = roomID;\n    if (username !== \"\" && roomID !== \"\") {\n      setMsg({\n        author: username,\n        message: \"입장을 환영합니다\"\n      });\n      socket.emit(\"join_room\", username, roomID);\n    }\n  };\n  socket.on(\"receive_message\", data => {\n    setMsg({\n      author: data.author,\n      message: data.message\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      callEnded,\n      me,\n      msg,\n      setName,\n      joinRoom,\n      send_message\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this);\n};\n_s(ContextProvider, \"P6KmYwFVJEG9Dkq0QGfAcmfZh3w=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","msg","setMsg","author","message","myVideo","userVideo","myStream","roomName","myPeerConnection","getCameras","devices","navigator","mediaDevices","enumerateDevices","cameras","filter","device","kind","currentCamera","getVideoTracks","forEach","camera","option","document","createElement","value","deviceId","innerText","label","selected","camerasSelect","appendChild","e","console","log","getMedia","initialConstrains","audio","video","facingMode","cameraConstraints","exact","getUserMedia","current","srcObject","makeConnection","RTCPeerConnection","getTracks","track","addTrack","send_message","username","room","currMsg","msgData","time","Date","now","getHours","emit","on","offer","createOffer","setLocalDescription","joinRoom","roomID","data","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport {io} from 'socket.io-client';\n\n\nconst SocketContext = createContext();\n\nconst socket = io('http://localhost:4000');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n    \n    const [msg, setMsg] = useState({ \n      author : '',\n      message : ''\n    })\n\n    const myVideo = useRef();\n    const userVideo = useRef();\n    \n    let myStream;\n    let roomName;\n    let myPeerConnection;\n\n    async function getCameras() {\n      try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const cameras = devices.filter((device) => device.kind === \"videoinput\");\n        const currentCamera = myStream.getVideoTracks()[0];\n        cameras.forEach((camera) => {\n          const option = document.createElement(\"option\");\n          option.value = camera.deviceId;\n          option.innerText = camera.label;\n          if (currentCamera.label === camera.label) {\n            option.selected = true;\n          }\n          camerasSelect.appendChild(option);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    async function getMedia(deviceId) {\n      const initialConstrains = {\n        audio: true,\n        video: { facingMode: \"user\" },\n      };\n      const cameraConstraints = {\n        audio: true,\n        video: { deviceId: { exact: deviceId } },\n      };\n      try {\n      \n        myStream = await navigator.mediaDevices.getUserMedia(\n          deviceId ? cameraConstraints : initialConstrains\n        );\n        myVideo.current.srcObject = myStream;\n        if (!deviceId) {\n          await getCameras();\n        }\n        \n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    function makeConnection() {\n      myPeerConnection = new RTCPeerConnection();\n      myStream.getTracks().forEach((track) => myPeerConnection.addTrack(track, myStream));\n    }\n\n    getMedia();\n    makeConnection();\n  \n    const send_message = (username, room, currMsg) => {\n      if (currMsg !== \"\") {\n          setMsg({\n            author : username,\n            message : currMsg\n          })\n          const msgData = {\n              room: room, \n              author: username,\n              message: currMsg,\n              time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours(),\n          };\n\n          socket.emit(\"send_message\", msgData);\n          \n      }\n    };\n\n    socket.on(\"welcome\", async () => {\n      const offer = await myPeerConnection.createOffer();\n      myPeerConnection.setLocalDescription(offer);\n      console.log(\"sent the offer\");\n      socket.emit(\"offer\", offer, roomName);\n    });\n\n    const joinRoom = (username, roomID) =>{\n      roomName = roomID;\n      if (username !== \"\" && roomID !== \"\"){\n        setMsg({\n          author : username,\n          message : \"입장을 환영합니다\"\n        })\n        socket.emit(\"join_room\", username, roomID);\n      } \n      \n    }\n\n    \n    \n    socket.on(\"receive_message\", (data) => {\n      setMsg({\n        author : data.author,\n        message : data.message\n      })\n        \n    })\n    \n    \n    return (\n      <SocketContext.Provider value={{\n\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        callEnded,\n        me,\n        msg,\n        setName,\n        joinRoom,\n        send_message, \n        \n      }}\n      >\n        \n        {children}\n      </SocketContext.Provider>\n    );\n};\n  \n\n\nexport { ContextProvider, SocketContext };"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACvE,SAAQC,EAAE,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,aAAa,gBAAGP,aAAa,EAAE;AAErC,MAAMQ,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMK,eAAe,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,EAAE;EACtC,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACsB,EAAE,EAAEC,KAAK,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEhC,MAAM,CAACwB,GAAG,EAAEC,MAAM,CAAC,GAAGzB,QAAQ,CAAC;IAC7B0B,MAAM,EAAG,EAAE;IACXC,OAAO,EAAG;EACZ,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG3B,MAAM,EAAE;EACxB,MAAM4B,SAAS,GAAG5B,MAAM,EAAE;EAE1B,IAAI6B,QAAQ;EACZ,IAAIC,QAAQ;EACZ,IAAIC,gBAAgB;EAEpB,eAAeC,UAAUA,CAAA,EAAG;IAC1B,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,gBAAgB,EAAE;MAC/D,MAAMC,OAAO,GAAGJ,OAAO,CAACK,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,KAAK,YAAY,CAAC;MACxE,MAAMC,aAAa,GAAGZ,QAAQ,CAACa,cAAc,EAAE,CAAC,CAAC,CAAC;MAClDL,OAAO,CAACM,OAAO,CAAEC,MAAM,IAAK;QAC1B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/CF,MAAM,CAACG,KAAK,GAAGJ,MAAM,CAACK,QAAQ;QAC9BJ,MAAM,CAACK,SAAS,GAAGN,MAAM,CAACO,KAAK;QAC/B,IAAIV,aAAa,CAACU,KAAK,KAAKP,MAAM,CAACO,KAAK,EAAE;UACxCN,MAAM,CAACO,QAAQ,GAAG,IAAI;QACxB;QACAC,aAAa,CAACC,WAAW,CAACT,MAAM,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOU,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB;EACF;EAEA,eAAeG,QAAQA,CAACT,QAAQ,EAAE;IAChC,MAAMU,iBAAiB,GAAG;MACxBC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAO;IAC9B,CAAC;IACD,MAAMC,iBAAiB,GAAG;MACxBH,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE;QAAEZ,QAAQ,EAAE;UAAEe,KAAK,EAAEf;QAAS;MAAE;IACzC,CAAC;IACD,IAAI;MAEFpB,QAAQ,GAAG,MAAMK,SAAS,CAACC,YAAY,CAAC8B,YAAY,CAClDhB,QAAQ,GAAGc,iBAAiB,GAAGJ,iBAAiB,CACjD;MACDhC,OAAO,CAACuC,OAAO,CAACC,SAAS,GAAGtC,QAAQ;MACpC,IAAI,CAACoB,QAAQ,EAAE;QACb,MAAMjB,UAAU,EAAE;MACpB;IAEF,CAAC,CAAC,OAAOuB,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB;EACF;EAEA,SAASa,cAAcA,CAAA,EAAG;IACxBrC,gBAAgB,GAAG,IAAIsC,iBAAiB,EAAE;IAC1CxC,QAAQ,CAACyC,SAAS,EAAE,CAAC3B,OAAO,CAAE4B,KAAK,IAAKxC,gBAAgB,CAACyC,QAAQ,CAACD,KAAK,EAAE1C,QAAQ,CAAC,CAAC;EACrF;EAEA6B,QAAQ,EAAE;EACVU,cAAc,EAAE;EAEhB,MAAMK,YAAY,GAAGA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,KAAK;IAChD,IAAIA,OAAO,KAAK,EAAE,EAAE;MAChBpD,MAAM,CAAC;QACLC,MAAM,EAAGiD,QAAQ;QACjBhD,OAAO,EAAGkD;MACZ,CAAC,CAAC;MACF,MAAMC,OAAO,GAAG;QACZF,IAAI,EAAEA,IAAI;QACVlD,MAAM,EAAEiD,QAAQ;QAChBhD,OAAO,EAAEkD,OAAO;QAChBE,IAAI,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACC,QAAQ;MAC/E,CAAC;MAED3E,MAAM,CAAC4E,IAAI,CAAC,cAAc,EAAEL,OAAO,CAAC;IAExC;EACF,CAAC;EAEDvE,MAAM,CAAC6E,EAAE,CAAC,SAAS,EAAE,YAAY;IAC/B,MAAMC,KAAK,GAAG,MAAMrD,gBAAgB,CAACsD,WAAW,EAAE;IAClDtD,gBAAgB,CAACuD,mBAAmB,CAACF,KAAK,CAAC;IAC3C5B,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BnD,MAAM,CAAC4E,IAAI,CAAC,OAAO,EAAEE,KAAK,EAAEtD,QAAQ,CAAC;EACvC,CAAC,CAAC;EAEF,MAAMyD,QAAQ,GAAGA,CAACb,QAAQ,EAAEc,MAAM,KAAI;IACpC1D,QAAQ,GAAG0D,MAAM;IACjB,IAAId,QAAQ,KAAK,EAAE,IAAIc,MAAM,KAAK,EAAE,EAAC;MACnChE,MAAM,CAAC;QACLC,MAAM,EAAGiD,QAAQ;QACjBhD,OAAO,EAAG;MACZ,CAAC,CAAC;MACFpB,MAAM,CAAC4E,IAAI,CAAC,WAAW,EAAER,QAAQ,EAAEc,MAAM,CAAC;IAC5C;EAEF,CAAC;EAIDlF,MAAM,CAAC6E,EAAE,CAAC,iBAAiB,EAAGM,IAAI,IAAK;IACrCjE,MAAM,CAAC;MACLC,MAAM,EAAGgE,IAAI,CAAChE,MAAM;MACpBC,OAAO,EAAG+D,IAAI,CAAC/D;IACjB,CAAC,CAAC;EAEJ,CAAC,CAAC;EAGF,oBACEtB,OAAA,CAACC,aAAa,CAACqF,QAAQ;IAAC1C,KAAK,EAAE;MAE7B7B,IAAI;MACJR,YAAY;MACZgB,OAAO;MACPC,SAAS;MACTb,MAAM;MACNE,IAAI;MACJJ,SAAS;MACTQ,EAAE;MACFE,GAAG;MACHL,OAAO;MACPqE,QAAQ;MACRd;IAEF,CAAE;IAAA/D,QAAA,EAGCA;EAAQ;IAAAiF,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACc;AAE/B,CAAC;AAACrF,EAAA,CA7IIF,eAAe;AAAAwF,EAAA,GAAfxF,eAAe;AAiJrB,SAASA,eAAe,EAAEF,aAAa;AAAG,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}