{"ast":null,"code":"var _jsxFileName = \"/Users/hyedo/Desktop/react/client/src/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:4000');\nconst ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const [muteBtn, setMutebtn] = useState(false);\n  const [cameraBtn, setCamerabtn] = useState(true);\n  const [msg, setMsg] = useState({\n    author: '',\n    message: ''\n  });\n  const userVideo = useRef();\n  let roomName;\n  let myPeerConnection;\n  function handleCameraClick(myVideo, cameraBtn) {\n    setCamerabtn(!cameraBtn);\n    myVideo.current.srcObject.getVideoTracks()[0].enabled = cameraBtn;\n  }\n  function handleMuteClick(myVideo, muteBtn) {\n    setMutebtn(!muteBtn);\n    myVideo.current.srcObject.getAudioTracks()[0].enabled = !muteBtn;\n  }\n  const send_message = (username, room, currMsg) => {\n    if (currMsg !== \"\") {\n      setMsg({\n        author: username,\n        message: currMsg\n      });\n      const msgData = {\n        room: room,\n        author: username,\n        message: currMsg,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours()\n      };\n      socket.emit(\"send_message\", msgData);\n    }\n  };\n  socket.on(\"welcome\", async () => {\n    const offer = await myPeerConnection.createOffer();\n    myPeerConnection.setLocalDescription(offer);\n    console.log(\"sent the offer\");\n    // socket.emit(\"offer\", offer, );\n  });\n\n  const joinRoom = (username, roomID) => {\n    roomName = roomID;\n    if (username !== \"\" && roomID !== \"\") {\n      setMsg({\n        author: username,\n        message: \"입장을 환영합니다\"\n      });\n      socket.emit(\"join_room\", username, roomID);\n    }\n  };\n  socket.on(\"receive_message\", data => {\n    setMsg({\n      author: data.author,\n      message: data.message\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      muteBtn,\n      cameraBtn,\n      call,\n      callAccepted,\n      userVideo,\n      stream,\n      name,\n      callEnded,\n      me,\n      msg,\n      setName,\n      joinRoom,\n      send_message,\n      handleCameraClick,\n      handleMuteClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n};\n_s(ContextProvider, \"c5jq+MeJOSZWoMRylffbwSab4/k=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","_ref","_s","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","muteBtn","setMutebtn","cameraBtn","setCamerabtn","msg","setMsg","author","message","userVideo","roomName","myPeerConnection","handleCameraClick","myVideo","current","srcObject","getVideoTracks","enabled","handleMuteClick","getAudioTracks","send_message","username","room","currMsg","msgData","time","Date","now","getHours","emit","on","offer","createOffer","setLocalDescription","console","log","joinRoom","roomID","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyedo/Desktop/react/client/src/SocketContext.js"],"sourcesContent":["import React, {createContext, useState, useRef, useEffect} from \"react\";\nimport {io} from 'socket.io-client';\n\n\nconst SocketContext = createContext();\n\nconst socket = io('http://localhost:4000');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n    const [muteBtn, setMutebtn] = useState(false);\n    const [cameraBtn, setCamerabtn] = useState(true);\n\n\n    const [msg, setMsg] = useState({ \n      author : '',\n      message : ''\n    })\n\n    const userVideo = useRef();\n    \n    let roomName;\n    let myPeerConnection;\n\n    function handleCameraClick (myVideo, cameraBtn) {\n      \n      setCamerabtn(!cameraBtn);\n      myVideo.current.srcObject.getVideoTracks()[0].enabled = cameraBtn;\n    }\n  \n    function handleMuteClick (myVideo, muteBtn) {\n      setMutebtn(!muteBtn);\n      myVideo.current.srcObject.getAudioTracks()[0].enabled = !muteBtn;\n    }\n\n    \n\n\n    const send_message = (username, room, currMsg) => {\n      if (currMsg !== \"\") {\n          setMsg({\n            author : username,\n            message : currMsg\n          })\n          const msgData = {\n              room: room, \n              author: username,\n              message: currMsg,\n              time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getHours(),\n          };\n\n          socket.emit(\"send_message\", msgData);\n          \n      }\n    };\n\n    socket.on(\"welcome\", async () => {\n      const offer = await myPeerConnection.createOffer();\n      myPeerConnection.setLocalDescription(offer);\n      console.log(\"sent the offer\");\n      // socket.emit(\"offer\", offer, );\n    });\n\n    const joinRoom = (username, roomID) =>{\n      roomName = roomID;\n      if (username !== \"\" && roomID !== \"\"){\n        setMsg({\n          author : username,\n          message : \"입장을 환영합니다\"\n        })\n        socket.emit(\"join_room\", username, roomID);\n      } \n      \n    }\n\n    \n    \n    socket.on(\"receive_message\", (data) => {\n      setMsg({\n        author : data.author,\n        message : data.message\n      })\n        \n    })\n    \n    \n    return (\n      <SocketContext.Provider value={{\n        muteBtn,\n        cameraBtn,\n        call,\n        callAccepted,\n        userVideo,\n        stream,\n        name,\n        callEnded,\n        me,\n        msg,\n        setName,\n        joinRoom,\n        send_message,\n        handleCameraClick,\n        handleMuteClick\n        \n      }}\n      >\n        \n        {children}\n      </SocketContext.Provider>\n    );\n};\n  \n\n\nexport { ContextProvider, SocketContext };"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACvE,SAAQC,EAAE,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,aAAa,gBAAGP,aAAa,EAAE;AAErC,MAAMQ,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMK,eAAe,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,EAAE;EACtC,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACsB,EAAE,EAAEC,KAAK,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAGhD,MAAM,CAAC4B,GAAG,EAAEC,MAAM,CAAC,GAAG7B,QAAQ,CAAC;IAC7B8B,MAAM,EAAG,EAAE;IACXC,OAAO,EAAG;EACZ,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG/B,MAAM,EAAE;EAE1B,IAAIgC,QAAQ;EACZ,IAAIC,gBAAgB;EAEpB,SAASC,iBAAiBA,CAAEC,OAAO,EAAEV,SAAS,EAAE;IAE9CC,YAAY,CAAC,CAACD,SAAS,CAAC;IACxBU,OAAO,CAACC,OAAO,CAACC,SAAS,CAACC,cAAc,EAAE,CAAC,CAAC,CAAC,CAACC,OAAO,GAAGd,SAAS;EACnE;EAEA,SAASe,eAAeA,CAAEL,OAAO,EAAEZ,OAAO,EAAE;IAC1CC,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBY,OAAO,CAACC,OAAO,CAACC,SAAS,CAACI,cAAc,EAAE,CAAC,CAAC,CAAC,CAACF,OAAO,GAAG,CAAChB,OAAO;EAClE;EAKA,MAAMmB,YAAY,GAAGA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,KAAK;IAChD,IAAIA,OAAO,KAAK,EAAE,EAAE;MAChBjB,MAAM,CAAC;QACLC,MAAM,EAAGc,QAAQ;QACjBb,OAAO,EAAGe;MACZ,CAAC,CAAC;MACF,MAAMC,OAAO,GAAG;QACZF,IAAI,EAAEA,IAAI;QACVf,MAAM,EAAEc,QAAQ;QAChBb,OAAO,EAAEe,OAAO;QAChBE,IAAI,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC,CAACC,QAAQ;MAC/E,CAAC;MAED5C,MAAM,CAAC6C,IAAI,CAAC,cAAc,EAAEL,OAAO,CAAC;IAExC;EACF,CAAC;EAEDxC,MAAM,CAAC8C,EAAE,CAAC,SAAS,EAAE,YAAY;IAC/B,MAAMC,KAAK,GAAG,MAAMpB,gBAAgB,CAACqB,WAAW,EAAE;IAClDrB,gBAAgB,CAACsB,mBAAmB,CAACF,KAAK,CAAC;IAC3CG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B;EACF,CAAC,CAAC;;EAEF,MAAMC,QAAQ,GAAGA,CAACf,QAAQ,EAAEgB,MAAM,KAAI;IACpC3B,QAAQ,GAAG2B,MAAM;IACjB,IAAIhB,QAAQ,KAAK,EAAE,IAAIgB,MAAM,KAAK,EAAE,EAAC;MACnC/B,MAAM,CAAC;QACLC,MAAM,EAAGc,QAAQ;QACjBb,OAAO,EAAG;MACZ,CAAC,CAAC;MACFxB,MAAM,CAAC6C,IAAI,CAAC,WAAW,EAAER,QAAQ,EAAEgB,MAAM,CAAC;IAC5C;EAEF,CAAC;EAIDrD,MAAM,CAAC8C,EAAE,CAAC,iBAAiB,EAAGQ,IAAI,IAAK;IACrChC,MAAM,CAAC;MACLC,MAAM,EAAG+B,IAAI,CAAC/B,MAAM;MACpBC,OAAO,EAAG8B,IAAI,CAAC9B;IACjB,CAAC,CAAC;EAEJ,CAAC,CAAC;EAGF,oBACE1B,OAAA,CAACC,aAAa,CAACwD,QAAQ;IAACC,KAAK,EAAE;MAC7BvC,OAAO;MACPE,SAAS;MACTN,IAAI;MACJR,YAAY;MACZoB,SAAS;MACThB,MAAM;MACNE,IAAI;MACJJ,SAAS;MACTQ,EAAE;MACFM,GAAG;MACHT,OAAO;MACPwC,QAAQ;MACRhB,YAAY;MACZR,iBAAiB;MACjBM;IAEF,CAAE;IAAA9B,QAAA,EAGCA;EAAQ;IAAAqD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACc;AAE/B,CAAC;AAACzD,EAAA,CA3GIF,eAAe;AAAA4D,EAAA,GAAf5D,eAAe;AA+GrB,SAASA,eAAe,EAAEF,aAAa;AAAG,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}